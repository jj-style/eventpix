// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file picture/v1/storage.proto (package picture.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message picture.v1.Filesystem
 */
export class Filesystem extends Message<Filesystem> {
  /**
   * @generated from field: string directory = 1;
   */
  directory = "";

  constructor(data?: PartialMessage<Filesystem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "picture.v1.Filesystem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directory", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Filesystem {
    return new Filesystem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Filesystem {
    return new Filesystem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Filesystem {
    return new Filesystem().fromJsonString(jsonString, options);
  }

  static equals(a: Filesystem | PlainMessage<Filesystem> | undefined, b: Filesystem | PlainMessage<Filesystem> | undefined): boolean {
    return proto3.util.equals(Filesystem, a, b);
  }
}

