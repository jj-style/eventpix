// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file picture/v1/picture.proto (package picture.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateEventRequest, CreateEventResponse, GetEventRequest, GetEventResponse, GetEventsRequest, GetEventsResponse, GetThumbnailRequest, GetThumbnailResponse, GetThumbnailsRequest, GetThumbnailsResponse, UploadRequest, UploadResponse } from "./picture_pb.ts";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service picture.v1.PictureService
 */
export const PictureService = {
  typeName: "picture.v1.PictureService",
  methods: {
    /**
     * @generated from rpc picture.v1.PictureService.CreateEvent
     */
    createEvent: {
      name: "CreateEvent",
      I: CreateEventRequest,
      O: CreateEventResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc picture.v1.PictureService.GetEvents
     */
    getEvents: {
      name: "GetEvents",
      I: GetEventsRequest,
      O: GetEventsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc picture.v1.PictureService.GetEvent
     */
    getEvent: {
      name: "GetEvent",
      I: GetEventRequest,
      O: GetEventResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc picture.v1.PictureService.Upload
     */
    upload: {
      name: "Upload",
      I: UploadRequest,
      O: UploadResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc picture.v1.PictureService.GetThumbnails
     */
    getThumbnails: {
      name: "GetThumbnails",
      I: GetThumbnailsRequest,
      O: GetThumbnailsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc picture.v1.PictureService.GetThumbnail
     */
    getThumbnail: {
      name: "GetThumbnail",
      I: GetThumbnailRequest,
      O: GetThumbnailResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
  }
} as const;

