syntax = "proto3";

package picture.v1;

import "picture/v1/storage.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

service PictureService {
    rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse);
    rpc SetEventLive(SetEventLiveRequest) returns (SetEventLiveResponse);
    rpc GetEvents(GetEventsRequest) returns (GetEventsResponse);
    rpc GetEvent(GetEventRequest) returns (GetEventResponse);
    rpc GetActiveEvent(GetActiveEventRequest) returns (GetEventResponse);
    rpc SetActiveEvent(SetActiveEventRequest) returns (google.protobuf.Empty);
    rpc DeleteEvent(DeleteEventRequest) returns (google.protobuf.Empty);
    rpc Upload(UploadRequest) returns (UploadResponse);
    rpc GetThumbnails(GetThumbnailsRequest) returns (GetThumbnailsResponse);
}

// Message representing an event
message Event {
    // Identifier of the event
    uint64  id = 1;
    // Name of the event
    string name = 2;
    // Whether the event is live
    bool live = 3;
    // File infos in the event
    FileInfosValue file_infos = 4;
    // Storage for the event
    oneof storage {
        Filesystem filesystem = 5;
        S3 s3 = 6;
        GoogleDrive googleDrive = 7;
        Ftp ftp = 10;
    }
    // Whether the event is active
    bool active = 8;
    // Password of the event
    google.protobuf.StringValue password = 9;
}

// Wrapper around a list of FileInfo
message FileInfosValue {
    repeated FileInfo value = 1;
}

// Message representing file information
message FileInfo {
    // ID of the file stored
    string id = 1;
    // Name of the file
    string name = 2;
    // Whether the file is a video or not
    bool video = 3;
    // ID of the event the file belongs to
    uint64 event_id = 4;
}

// Create an event where photos will be taken and associated with
message CreateEventRequest {
    // Name of the event
    string name = 1;
    // Slug of the event
    string slug = 2;
    // Whether the event is live
    bool live = 3;
    // Storage for the event
    oneof storage {
        Filesystem filesystem = 4;
        S3 s3 = 5;
        GoogleDrive googleDrive = 6;
        Ftp ftp = 8;
    }
    // Password of the event
    string password = 7;
}

// Response from successfully creating an event
message CreateEventResponse {
    // Identifier of the event created
    uint64 id = 1;
}

// Message to query available events
message GetEventsRequest {}

// Message containings events queries
message GetEventsResponse {
    // List of events
    repeated Event events = 1;
}

// Request to get an event
message GetEventRequest{
    // get event by either ID or slug
    oneof value {
        uint64 id = 1;
        string slug = 2;
    }
}

// Request to get the active event
message GetActiveEventRequest {}

// Request to set the active event
message SetActiveEventRequest {
    // id of event to set as active
    uint64 id = 1;
}

message GetEventResponse{
    Event event = 1;
}

message SetEventLiveRequest {
    uint64 id = 1;
    bool live = 2;
}

message SetEventLiveResponse {
    // The updated event
    Event event = 1;
}

message DeleteEventRequest {
    uint64 id = 1;
}

// Message to upload a file to an event
message UploadRequest {
    // Event the file is a part of
    uint64 event_id = 1;
    // The file to upload
    File file = 2;
}

// File to upload
message File {
    // The name of the file
    string name = 1;
    // The files data in bytes
    bytes data = 2;
}

message UploadResponse {}

message GetThumbnailsRequest {
    // Event to query thumbnails for
    uint64 event_id = 1;
    // Limit the number of results
    int64 limit = 2;
    // Offset to search from
    int64 offset = 3;
}

message GetThumbnailsResponse {
    repeated Thumbnail thumbnails = 1;
}

message Thumbnail {
    // ID of the thumbnail
    string id = 1;
    // Name of the thumbnail file
    string name = 2;
    // File information the thumbnail is for.
    FileInfo file_info = 3;
    // ID of the event the thumbnail belongs to
    uint64 event_id = 4;
}