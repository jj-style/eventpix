// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: picture/v1/picture.proto

package picturev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message representing an event
type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the event
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the event
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Whether the event is live
	Live bool `protobuf:"varint,3,opt,name=live,proto3" json:"live,omitempty"`
	// File infos in the event
	FileInfos *FileInfosValue `protobuf:"bytes,4,opt,name=file_infos,json=fileInfos,proto3" json:"file_infos,omitempty"`
	// Storage for the event
	//
	// Types that are valid to be assigned to Storage:
	//
	//	*Event_Filesystem
	//	*Event_S3
	//	*Event_GoogleDrive
	Storage isEvent_Storage `protobuf_oneof:"storage"`
	// Whether the event is active
	Active bool `protobuf:"varint,8,opt,name=active,proto3" json:"active,omitempty"`
	// Password of the event
	Password      *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_picture_v1_picture_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetLive() bool {
	if x != nil {
		return x.Live
	}
	return false
}

func (x *Event) GetFileInfos() *FileInfosValue {
	if x != nil {
		return x.FileInfos
	}
	return nil
}

func (x *Event) GetStorage() isEvent_Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *Event) GetFilesystem() *Filesystem {
	if x != nil {
		if x, ok := x.Storage.(*Event_Filesystem); ok {
			return x.Filesystem
		}
	}
	return nil
}

func (x *Event) GetS3() *S3 {
	if x != nil {
		if x, ok := x.Storage.(*Event_S3); ok {
			return x.S3
		}
	}
	return nil
}

func (x *Event) GetGoogleDrive() *GoogleDrive {
	if x != nil {
		if x, ok := x.Storage.(*Event_GoogleDrive); ok {
			return x.GoogleDrive
		}
	}
	return nil
}

func (x *Event) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Event) GetPassword() *wrapperspb.StringValue {
	if x != nil {
		return x.Password
	}
	return nil
}

type isEvent_Storage interface {
	isEvent_Storage()
}

type Event_Filesystem struct {
	Filesystem *Filesystem `protobuf:"bytes,5,opt,name=filesystem,proto3,oneof"`
}

type Event_S3 struct {
	S3 *S3 `protobuf:"bytes,6,opt,name=s3,proto3,oneof"`
}

type Event_GoogleDrive struct {
	GoogleDrive *GoogleDrive `protobuf:"bytes,7,opt,name=googleDrive,proto3,oneof"`
}

func (*Event_Filesystem) isEvent_Storage() {}

func (*Event_S3) isEvent_Storage() {}

func (*Event_GoogleDrive) isEvent_Storage() {}

// Wrapper around a list of FileInfo
type FileInfosValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []*FileInfo            `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfosValue) Reset() {
	*x = FileInfosValue{}
	mi := &file_picture_v1_picture_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfosValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfosValue) ProtoMessage() {}

func (x *FileInfosValue) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfosValue.ProtoReflect.Descriptor instead.
func (*FileInfosValue) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{1}
}

func (x *FileInfosValue) GetValue() []*FileInfo {
	if x != nil {
		return x.Value
	}
	return nil
}

// Message representing file information
type FileInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the file stored
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the file
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Whether the file is a video or not
	Video bool `protobuf:"varint,3,opt,name=video,proto3" json:"video,omitempty"`
	// ID of the event the file belongs to
	EventId       uint64 `protobuf:"varint,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_picture_v1_picture_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{2}
}

func (x *FileInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetVideo() bool {
	if x != nil {
		return x.Video
	}
	return false
}

func (x *FileInfo) GetEventId() uint64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

// Create an event where photos will be taken and associated with
type CreateEventRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the event
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Slug of the event
	Slug string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	// Whether the event is live
	Live bool `protobuf:"varint,3,opt,name=live,proto3" json:"live,omitempty"`
	// Storage for the event
	//
	// Types that are valid to be assigned to Storage:
	//
	//	*CreateEventRequest_Filesystem
	//	*CreateEventRequest_S3
	//	*CreateEventRequest_GoogleDrive
	Storage isCreateEventRequest_Storage `protobuf_oneof:"storage"`
	// Password of the event
	Password      string `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventRequest) Reset() {
	*x = CreateEventRequest{}
	mi := &file_picture_v1_picture_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventRequest) ProtoMessage() {}

func (x *CreateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventRequest.ProtoReflect.Descriptor instead.
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{3}
}

func (x *CreateEventRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEventRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *CreateEventRequest) GetLive() bool {
	if x != nil {
		return x.Live
	}
	return false
}

func (x *CreateEventRequest) GetStorage() isCreateEventRequest_Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *CreateEventRequest) GetFilesystem() *Filesystem {
	if x != nil {
		if x, ok := x.Storage.(*CreateEventRequest_Filesystem); ok {
			return x.Filesystem
		}
	}
	return nil
}

func (x *CreateEventRequest) GetS3() *S3 {
	if x != nil {
		if x, ok := x.Storage.(*CreateEventRequest_S3); ok {
			return x.S3
		}
	}
	return nil
}

func (x *CreateEventRequest) GetGoogleDrive() *GoogleDrive {
	if x != nil {
		if x, ok := x.Storage.(*CreateEventRequest_GoogleDrive); ok {
			return x.GoogleDrive
		}
	}
	return nil
}

func (x *CreateEventRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type isCreateEventRequest_Storage interface {
	isCreateEventRequest_Storage()
}

type CreateEventRequest_Filesystem struct {
	Filesystem *Filesystem `protobuf:"bytes,4,opt,name=filesystem,proto3,oneof"`
}

type CreateEventRequest_S3 struct {
	S3 *S3 `protobuf:"bytes,5,opt,name=s3,proto3,oneof"`
}

type CreateEventRequest_GoogleDrive struct {
	GoogleDrive *GoogleDrive `protobuf:"bytes,6,opt,name=googleDrive,proto3,oneof"`
}

func (*CreateEventRequest_Filesystem) isCreateEventRequest_Storage() {}

func (*CreateEventRequest_S3) isCreateEventRequest_Storage() {}

func (*CreateEventRequest_GoogleDrive) isCreateEventRequest_Storage() {}

// Response from successfully creating an event
type CreateEventResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the event created
	Id            uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventResponse) Reset() {
	*x = CreateEventResponse{}
	mi := &file_picture_v1_picture_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventResponse) ProtoMessage() {}

func (x *CreateEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventResponse.ProtoReflect.Descriptor instead.
func (*CreateEventResponse) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{4}
}

func (x *CreateEventResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Message to query available events
type GetEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsRequest) Reset() {
	*x = GetEventsRequest{}
	mi := &file_picture_v1_picture_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest) ProtoMessage() {}

func (x *GetEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest.ProtoReflect.Descriptor instead.
func (*GetEventsRequest) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{5}
}

// Message containings events queries
type GetEventsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of events
	Events        []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsResponse) Reset() {
	*x = GetEventsResponse{}
	mi := &file_picture_v1_picture_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsResponse) ProtoMessage() {}

func (x *GetEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsResponse.ProtoReflect.Descriptor instead.
func (*GetEventsResponse) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{6}
}

func (x *GetEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

// Request to get an event
type GetEventRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// get event by either ID or slug
	//
	// Types that are valid to be assigned to Value:
	//
	//	*GetEventRequest_Id
	//	*GetEventRequest_Slug
	Value         isGetEventRequest_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventRequest) Reset() {
	*x = GetEventRequest{}
	mi := &file_picture_v1_picture_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventRequest) ProtoMessage() {}

func (x *GetEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventRequest.ProtoReflect.Descriptor instead.
func (*GetEventRequest) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{7}
}

func (x *GetEventRequest) GetValue() isGetEventRequest_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GetEventRequest) GetId() uint64 {
	if x != nil {
		if x, ok := x.Value.(*GetEventRequest_Id); ok {
			return x.Id
		}
	}
	return 0
}

func (x *GetEventRequest) GetSlug() string {
	if x != nil {
		if x, ok := x.Value.(*GetEventRequest_Slug); ok {
			return x.Slug
		}
	}
	return ""
}

type isGetEventRequest_Value interface {
	isGetEventRequest_Value()
}

type GetEventRequest_Id struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type GetEventRequest_Slug struct {
	Slug string `protobuf:"bytes,2,opt,name=slug,proto3,oneof"`
}

func (*GetEventRequest_Id) isGetEventRequest_Value() {}

func (*GetEventRequest_Slug) isGetEventRequest_Value() {}

// Request to get the active event
type GetActiveEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveEventRequest) Reset() {
	*x = GetActiveEventRequest{}
	mi := &file_picture_v1_picture_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveEventRequest) ProtoMessage() {}

func (x *GetActiveEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveEventRequest.ProtoReflect.Descriptor instead.
func (*GetActiveEventRequest) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{8}
}

// Request to set the active event
type SetActiveEventRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id of event to set as active
	Id            uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetActiveEventRequest) Reset() {
	*x = SetActiveEventRequest{}
	mi := &file_picture_v1_picture_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetActiveEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActiveEventRequest) ProtoMessage() {}

func (x *SetActiveEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActiveEventRequest.ProtoReflect.Descriptor instead.
func (*SetActiveEventRequest) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{9}
}

func (x *SetActiveEventRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventResponse) Reset() {
	*x = GetEventResponse{}
	mi := &file_picture_v1_picture_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventResponse) ProtoMessage() {}

func (x *GetEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventResponse.ProtoReflect.Descriptor instead.
func (*GetEventResponse) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{10}
}

func (x *GetEventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type SetEventLiveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Live          bool                   `protobuf:"varint,2,opt,name=live,proto3" json:"live,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetEventLiveRequest) Reset() {
	*x = SetEventLiveRequest{}
	mi := &file_picture_v1_picture_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetEventLiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEventLiveRequest) ProtoMessage() {}

func (x *SetEventLiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEventLiveRequest.ProtoReflect.Descriptor instead.
func (*SetEventLiveRequest) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{11}
}

func (x *SetEventLiveRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetEventLiveRequest) GetLive() bool {
	if x != nil {
		return x.Live
	}
	return false
}

type SetEventLiveResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated event
	Event         *Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetEventLiveResponse) Reset() {
	*x = SetEventLiveResponse{}
	mi := &file_picture_v1_picture_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetEventLiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEventLiveResponse) ProtoMessage() {}

func (x *SetEventLiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEventLiveResponse.ProtoReflect.Descriptor instead.
func (*SetEventLiveResponse) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{12}
}

func (x *SetEventLiveResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type DeleteEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventRequest) Reset() {
	*x = DeleteEventRequest{}
	mi := &file_picture_v1_picture_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventRequest) ProtoMessage() {}

func (x *DeleteEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventRequest.ProtoReflect.Descriptor instead.
func (*DeleteEventRequest) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteEventRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Message to upload a file to an event
type UploadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Event the file is a part of
	EventId uint64 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// The file to upload
	File          *File `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_picture_v1_picture_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{14}
}

func (x *UploadRequest) GetEventId() uint64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *UploadRequest) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

// File to upload
type File struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the file
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The files data in bytes
	Data          []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_picture_v1_picture_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{15}
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_picture_v1_picture_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{16}
}

type GetThumbnailsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Event to query thumbnails for
	EventId uint64 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// Limit the number of results
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset to search from
	Offset        int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThumbnailsRequest) Reset() {
	*x = GetThumbnailsRequest{}
	mi := &file_picture_v1_picture_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThumbnailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThumbnailsRequest) ProtoMessage() {}

func (x *GetThumbnailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThumbnailsRequest.ProtoReflect.Descriptor instead.
func (*GetThumbnailsRequest) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{17}
}

func (x *GetThumbnailsRequest) GetEventId() uint64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *GetThumbnailsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetThumbnailsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetThumbnailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Thumbnails    []*Thumbnail           `protobuf:"bytes,1,rep,name=thumbnails,proto3" json:"thumbnails,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThumbnailsResponse) Reset() {
	*x = GetThumbnailsResponse{}
	mi := &file_picture_v1_picture_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThumbnailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThumbnailsResponse) ProtoMessage() {}

func (x *GetThumbnailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThumbnailsResponse.ProtoReflect.Descriptor instead.
func (*GetThumbnailsResponse) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{18}
}

func (x *GetThumbnailsResponse) GetThumbnails() []*Thumbnail {
	if x != nil {
		return x.Thumbnails
	}
	return nil
}

type Thumbnail struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the thumbnail
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the thumbnail file
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// File information the thumbnail is for.
	FileInfo *FileInfo `protobuf:"bytes,3,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	// ID of the event the thumbnail belongs to
	EventId       uint64 `protobuf:"varint,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Thumbnail) Reset() {
	*x = Thumbnail{}
	mi := &file_picture_v1_picture_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Thumbnail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thumbnail) ProtoMessage() {}

func (x *Thumbnail) ProtoReflect() protoreflect.Message {
	mi := &file_picture_v1_picture_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thumbnail.ProtoReflect.Descriptor instead.
func (*Thumbnail) Descriptor() ([]byte, []int) {
	return file_picture_v1_picture_proto_rawDescGZIP(), []int{19}
}

func (x *Thumbnail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Thumbnail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Thumbnail) GetFileInfo() *FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *Thumbnail) GetEventId() uint64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

var File_picture_v1_picture_proto protoreflect.FileDescriptor

const file_picture_v1_picture_proto_rawDesc = "" +
	"\n" +
	"\x18picture/v1/picture.proto\x12\n" +
	"picture.v1\x1a\x18picture/v1/storage.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xf0\x02\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04live\x18\x03 \x01(\bR\x04live\x129\n" +
	"\n" +
	"file_infos\x18\x04 \x01(\v2\x1a.picture.v1.FileInfosValueR\tfileInfos\x128\n" +
	"\n" +
	"filesystem\x18\x05 \x01(\v2\x16.picture.v1.FilesystemH\x00R\n" +
	"filesystem\x12 \n" +
	"\x02s3\x18\x06 \x01(\v2\x0e.picture.v1.S3H\x00R\x02s3\x12;\n" +
	"\vgoogleDrive\x18\a \x01(\v2\x17.picture.v1.GoogleDriveH\x00R\vgoogleDrive\x12\x16\n" +
	"\x06active\x18\b \x01(\bR\x06active\x128\n" +
	"\bpassword\x18\t \x01(\v2\x1c.google.protobuf.StringValueR\bpasswordB\t\n" +
	"\astorage\"<\n" +
	"\x0eFileInfosValue\x12*\n" +
	"\x05value\x18\x01 \x03(\v2\x14.picture.v1.FileInfoR\x05value\"_\n" +
	"\bFileInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05video\x18\x03 \x01(\bR\x05video\x12\x19\n" +
	"\bevent_id\x18\x04 \x01(\x04R\aeventId\"\x90\x02\n" +
	"\x12CreateEventRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04slug\x18\x02 \x01(\tR\x04slug\x12\x12\n" +
	"\x04live\x18\x03 \x01(\bR\x04live\x128\n" +
	"\n" +
	"filesystem\x18\x04 \x01(\v2\x16.picture.v1.FilesystemH\x00R\n" +
	"filesystem\x12 \n" +
	"\x02s3\x18\x05 \x01(\v2\x0e.picture.v1.S3H\x00R\x02s3\x12;\n" +
	"\vgoogleDrive\x18\x06 \x01(\v2\x17.picture.v1.GoogleDriveH\x00R\vgoogleDrive\x12\x1a\n" +
	"\bpassword\x18\a \x01(\tR\bpasswordB\t\n" +
	"\astorage\"%\n" +
	"\x13CreateEventResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"\x12\n" +
	"\x10GetEventsRequest\">\n" +
	"\x11GetEventsResponse\x12)\n" +
	"\x06events\x18\x01 \x03(\v2\x11.picture.v1.EventR\x06events\"B\n" +
	"\x0fGetEventRequest\x12\x10\n" +
	"\x02id\x18\x01 \x01(\x04H\x00R\x02id\x12\x14\n" +
	"\x04slug\x18\x02 \x01(\tH\x00R\x04slugB\a\n" +
	"\x05value\"\x17\n" +
	"\x15GetActiveEventRequest\"'\n" +
	"\x15SetActiveEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\";\n" +
	"\x10GetEventResponse\x12'\n" +
	"\x05event\x18\x01 \x01(\v2\x11.picture.v1.EventR\x05event\"9\n" +
	"\x13SetEventLiveRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04live\x18\x02 \x01(\bR\x04live\"?\n" +
	"\x14SetEventLiveResponse\x12'\n" +
	"\x05event\x18\x01 \x01(\v2\x11.picture.v1.EventR\x05event\"$\n" +
	"\x12DeleteEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"P\n" +
	"\rUploadRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\x04R\aeventId\x12$\n" +
	"\x04file\x18\x02 \x01(\v2\x10.picture.v1.FileR\x04file\".\n" +
	"\x04File\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"\x10\n" +
	"\x0eUploadResponse\"_\n" +
	"\x14GetThumbnailsRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\x04R\aeventId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x03R\x06offset\"N\n" +
	"\x15GetThumbnailsResponse\x125\n" +
	"\n" +
	"thumbnails\x18\x01 \x03(\v2\x15.picture.v1.ThumbnailR\n" +
	"thumbnails\"}\n" +
	"\tThumbnail\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x121\n" +
	"\tfile_info\x18\x03 \x01(\v2\x14.picture.v1.FileInfoR\bfileInfo\x12\x19\n" +
	"\bevent_id\x18\x04 \x01(\x04R\aeventId2\xc2\x05\n" +
	"\x0ePictureService\x12N\n" +
	"\vCreateEvent\x12\x1e.picture.v1.CreateEventRequest\x1a\x1f.picture.v1.CreateEventResponse\x12Q\n" +
	"\fSetEventLive\x12\x1f.picture.v1.SetEventLiveRequest\x1a .picture.v1.SetEventLiveResponse\x12H\n" +
	"\tGetEvents\x12\x1c.picture.v1.GetEventsRequest\x1a\x1d.picture.v1.GetEventsResponse\x12E\n" +
	"\bGetEvent\x12\x1b.picture.v1.GetEventRequest\x1a\x1c.picture.v1.GetEventResponse\x12Q\n" +
	"\x0eGetActiveEvent\x12!.picture.v1.GetActiveEventRequest\x1a\x1c.picture.v1.GetEventResponse\x12K\n" +
	"\x0eSetActiveEvent\x12!.picture.v1.SetActiveEventRequest\x1a\x16.google.protobuf.Empty\x12E\n" +
	"\vDeleteEvent\x12\x1e.picture.v1.DeleteEventRequest\x1a\x16.google.protobuf.Empty\x12?\n" +
	"\x06Upload\x12\x19.picture.v1.UploadRequest\x1a\x1a.picture.v1.UploadResponse\x12T\n" +
	"\rGetThumbnails\x12 .picture.v1.GetThumbnailsRequest\x1a!.picture.v1.GetThumbnailsResponseB\xa7\x01\n" +
	"\x0ecom.picture.v1B\fPictureProtoP\x01Z>github.com/jj-style/eventpix/internal/gen/picture/v1;picturev1\xa2\x02\x03PXX\xaa\x02\n" +
	"Picture.V1\xca\x02\n" +
	"Picture\\V1\xe2\x02\x16Picture\\V1\\GPBMetadata\xea\x02\vPicture::V1b\x06proto3"

var (
	file_picture_v1_picture_proto_rawDescOnce sync.Once
	file_picture_v1_picture_proto_rawDescData []byte
)

func file_picture_v1_picture_proto_rawDescGZIP() []byte {
	file_picture_v1_picture_proto_rawDescOnce.Do(func() {
		file_picture_v1_picture_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_picture_v1_picture_proto_rawDesc), len(file_picture_v1_picture_proto_rawDesc)))
	})
	return file_picture_v1_picture_proto_rawDescData
}

var file_picture_v1_picture_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_picture_v1_picture_proto_goTypes = []any{
	(*Event)(nil),                  // 0: picture.v1.Event
	(*FileInfosValue)(nil),         // 1: picture.v1.FileInfosValue
	(*FileInfo)(nil),               // 2: picture.v1.FileInfo
	(*CreateEventRequest)(nil),     // 3: picture.v1.CreateEventRequest
	(*CreateEventResponse)(nil),    // 4: picture.v1.CreateEventResponse
	(*GetEventsRequest)(nil),       // 5: picture.v1.GetEventsRequest
	(*GetEventsResponse)(nil),      // 6: picture.v1.GetEventsResponse
	(*GetEventRequest)(nil),        // 7: picture.v1.GetEventRequest
	(*GetActiveEventRequest)(nil),  // 8: picture.v1.GetActiveEventRequest
	(*SetActiveEventRequest)(nil),  // 9: picture.v1.SetActiveEventRequest
	(*GetEventResponse)(nil),       // 10: picture.v1.GetEventResponse
	(*SetEventLiveRequest)(nil),    // 11: picture.v1.SetEventLiveRequest
	(*SetEventLiveResponse)(nil),   // 12: picture.v1.SetEventLiveResponse
	(*DeleteEventRequest)(nil),     // 13: picture.v1.DeleteEventRequest
	(*UploadRequest)(nil),          // 14: picture.v1.UploadRequest
	(*File)(nil),                   // 15: picture.v1.File
	(*UploadResponse)(nil),         // 16: picture.v1.UploadResponse
	(*GetThumbnailsRequest)(nil),   // 17: picture.v1.GetThumbnailsRequest
	(*GetThumbnailsResponse)(nil),  // 18: picture.v1.GetThumbnailsResponse
	(*Thumbnail)(nil),              // 19: picture.v1.Thumbnail
	(*Filesystem)(nil),             // 20: picture.v1.Filesystem
	(*S3)(nil),                     // 21: picture.v1.S3
	(*GoogleDrive)(nil),            // 22: picture.v1.GoogleDrive
	(*wrapperspb.StringValue)(nil), // 23: google.protobuf.StringValue
	(*emptypb.Empty)(nil),          // 24: google.protobuf.Empty
}
var file_picture_v1_picture_proto_depIdxs = []int32{
	1,  // 0: picture.v1.Event.file_infos:type_name -> picture.v1.FileInfosValue
	20, // 1: picture.v1.Event.filesystem:type_name -> picture.v1.Filesystem
	21, // 2: picture.v1.Event.s3:type_name -> picture.v1.S3
	22, // 3: picture.v1.Event.googleDrive:type_name -> picture.v1.GoogleDrive
	23, // 4: picture.v1.Event.password:type_name -> google.protobuf.StringValue
	2,  // 5: picture.v1.FileInfosValue.value:type_name -> picture.v1.FileInfo
	20, // 6: picture.v1.CreateEventRequest.filesystem:type_name -> picture.v1.Filesystem
	21, // 7: picture.v1.CreateEventRequest.s3:type_name -> picture.v1.S3
	22, // 8: picture.v1.CreateEventRequest.googleDrive:type_name -> picture.v1.GoogleDrive
	0,  // 9: picture.v1.GetEventsResponse.events:type_name -> picture.v1.Event
	0,  // 10: picture.v1.GetEventResponse.event:type_name -> picture.v1.Event
	0,  // 11: picture.v1.SetEventLiveResponse.event:type_name -> picture.v1.Event
	15, // 12: picture.v1.UploadRequest.file:type_name -> picture.v1.File
	19, // 13: picture.v1.GetThumbnailsResponse.thumbnails:type_name -> picture.v1.Thumbnail
	2,  // 14: picture.v1.Thumbnail.file_info:type_name -> picture.v1.FileInfo
	3,  // 15: picture.v1.PictureService.CreateEvent:input_type -> picture.v1.CreateEventRequest
	11, // 16: picture.v1.PictureService.SetEventLive:input_type -> picture.v1.SetEventLiveRequest
	5,  // 17: picture.v1.PictureService.GetEvents:input_type -> picture.v1.GetEventsRequest
	7,  // 18: picture.v1.PictureService.GetEvent:input_type -> picture.v1.GetEventRequest
	8,  // 19: picture.v1.PictureService.GetActiveEvent:input_type -> picture.v1.GetActiveEventRequest
	9,  // 20: picture.v1.PictureService.SetActiveEvent:input_type -> picture.v1.SetActiveEventRequest
	13, // 21: picture.v1.PictureService.DeleteEvent:input_type -> picture.v1.DeleteEventRequest
	14, // 22: picture.v1.PictureService.Upload:input_type -> picture.v1.UploadRequest
	17, // 23: picture.v1.PictureService.GetThumbnails:input_type -> picture.v1.GetThumbnailsRequest
	4,  // 24: picture.v1.PictureService.CreateEvent:output_type -> picture.v1.CreateEventResponse
	12, // 25: picture.v1.PictureService.SetEventLive:output_type -> picture.v1.SetEventLiveResponse
	6,  // 26: picture.v1.PictureService.GetEvents:output_type -> picture.v1.GetEventsResponse
	10, // 27: picture.v1.PictureService.GetEvent:output_type -> picture.v1.GetEventResponse
	10, // 28: picture.v1.PictureService.GetActiveEvent:output_type -> picture.v1.GetEventResponse
	24, // 29: picture.v1.PictureService.SetActiveEvent:output_type -> google.protobuf.Empty
	24, // 30: picture.v1.PictureService.DeleteEvent:output_type -> google.protobuf.Empty
	16, // 31: picture.v1.PictureService.Upload:output_type -> picture.v1.UploadResponse
	18, // 32: picture.v1.PictureService.GetThumbnails:output_type -> picture.v1.GetThumbnailsResponse
	24, // [24:33] is the sub-list for method output_type
	15, // [15:24] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_picture_v1_picture_proto_init() }
func file_picture_v1_picture_proto_init() {
	if File_picture_v1_picture_proto != nil {
		return
	}
	file_picture_v1_storage_proto_init()
	file_picture_v1_picture_proto_msgTypes[0].OneofWrappers = []any{
		(*Event_Filesystem)(nil),
		(*Event_S3)(nil),
		(*Event_GoogleDrive)(nil),
	}
	file_picture_v1_picture_proto_msgTypes[3].OneofWrappers = []any{
		(*CreateEventRequest_Filesystem)(nil),
		(*CreateEventRequest_S3)(nil),
		(*CreateEventRequest_GoogleDrive)(nil),
	}
	file_picture_v1_picture_proto_msgTypes[7].OneofWrappers = []any{
		(*GetEventRequest_Id)(nil),
		(*GetEventRequest_Slug)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_picture_v1_picture_proto_rawDesc), len(file_picture_v1_picture_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_picture_v1_picture_proto_goTypes,
		DependencyIndexes: file_picture_v1_picture_proto_depIdxs,
		MessageInfos:      file_picture_v1_picture_proto_msgTypes,
	}.Build()
	File_picture_v1_picture_proto = out.File
	file_picture_v1_picture_proto_goTypes = nil
	file_picture_v1_picture_proto_depIdxs = nil
}
